extend layout

block scenarios

  //- Left join each scenario with its sessions. Select only launchable scenarios (with documents)
  //- and joinable sessions (with instances).

  -
    var application = "/ITDG/index.vwf",
      scenarios = manifest[ application ] || [];
    var scenario_sessions = _.sortBy( scenarios, function( scenario, name ) {
      return name;
    } ).filter( function( scenario ) {
      return scenario.scenario.document;
    } ).reduce( function( scenario_sessions, scenario ) {
      var sessions = ( scenario.sessions || [] ).filter( function( session ) {
        return session.instance;
      } );
      return scenario_sessions.concat( sessions.map( function( session ) {
        return { scenario: scenario.scenario, session: session };
      } ) ).concat( { scenario: scenario.scenario, session: undefined } );
    }, [] );

  table.table#scenarios
    thead
      tr
        th.col-sm-5 Scenario
        th.col-sm-1 Company
        th.col-sm-1 Platoon
        th.col-sm-1 Unit
        th.col-sm-3 &nbsp;
        th.col-sm-1 &nbsp;
    tbody
      each scenario_session in scenario_sessions
        -
          var scenario = scenario_session.scenario,
            session = scenario_session.session;
        if session
          tr.session
            td= session.state.scenarioTitle
              br
              span.small instructor, n students
            td= session.state.classroom.company
            td= session.state.classroom.platoon
            td= session.state.classroom.unit
            td &nbsp;
            td: a.btn.btn-sm.join(href=session.instance||session.document.uri target="_blank")= session.instance ? "Join" : "Start"
        else if user.instructor
          tr.scenario
            td= scenario.state.scenarioTitle
            td.company: input.form-control.input-sm(name="company" type="text" maxlength="8")
            td.platoon: input.form-control.input-sm(name="platoon" type="number" min="1" max="9" step="1")
            td.unit: input.form-control.input-sm(name="unit" type="number" min="1" max="9" step="1")
            td.name: input(name="name" type="hidden" value=scenario.state.scenarioName)
            td
              a.btn.btn-sm.edit(href=scenario.instance||scenario.document.uri target="_blank") Edit
              button.btn.btn-sm.create.hidden Create
      if user.instructor
        tr.application
          td.title: input.form-control.input-sm(name="title" type="text" placeholder="Scenario Title")
          td.name(colspan=3): input.form-control.input-sm(name="name" type="text" placeholder="Scenario Name")
          td &nbsp;
          td: button.btn.btn-sm.create.disabled Create
    script.
      document.addEventListener( "DOMContentLoaded", function() {
        $( "table#scenarios" ).on( "input", "tr.scenario", function() {
          var this$ = $( this ), filled = this$.find( ".company input" ).val() &&
            this$.find( ".platoon input" ).val() &&
            this$.find( ".unit input" ).val();
          if ( filled ) {
            this$.find( ".btn.edit" ).addClass( "hidden" );
            this$.find( ".btn.create" ).removeClass( "hidden" );
          } else {
            this$.find( ".btn.edit" ).removeClass( "hidden" );
            this$.find( ".btn.create" ).addClass( "hidden" );
          }
        } );
        $( "table#scenarios" ).on( "click", "tr.scenario .btn.create", function() {
          var row$ = $( this ).parents( "tr.scenario" ), properties = {
               name: row$.find( ".name input" ).val(),
            company: row$.find( ".company input" ).val(),
            platoon: row$.find( ".platoon input" ).val(),
               unit: row$.find( ".unit input" ).val(),
          };
          // $.post( "...", properties );
        } );
        $( "table#scenarios" ).on( "input", "tr.application", function() {
          var this$ = $( this ),
            filled = this$.find( ".title input" ).val();
          if ( filled ) {
            this$.find( ".btn.create" ).removeClass( "disabled" );
          } else {
            this$.find( ".btn.create" ).addClass( "disabled" );
          }
        } );
        $( "table#scenarios" ).on( "click", "tr.application .btn.create", function() {
          var row$ = $( this ).parents( "tr.application" ), properties = {
             name: row$.find( ".name input" ).val(),
            title: row$.find( ".title input" ).val(),
          };
          // $.post( "...", properties );
        } );
      } );

block sessions

  //- Join each scenario with its sessions. Select only completed sessions (with documents).

  -
    var application = "/ITDG/index.vwf",
      scenarios = manifest[ application ] || [];
    var scenario_sessions = _.sortBy( scenarios, function( scenario, name ) {
      return name;
    } ).reduce( function( scenario_sessions, scenario ) {
      var sessions = ( scenario.sessions || [] ).filter( function( session ) {
        return session.document;
      } );
      return scenario_sessions.concat( sessions.map( function( session ) {
        return { scenario: scenario.scenario, session: session };
      } ) );
    }, [] ).sort( function( a, b ) {
      return b.session.document.timestamp - a.session.document.timestamp;
    } );

  table.table#sessions
    thead
      tr
        th.col-sm-5 Scenario
        th.col-sm-1 Company
        th.col-sm-1 Platoon
        th.col-sm-1 Unit
        th.col-sm-3 Date
        th.col-sm-1 &nbsp;
    tbody: each scenario_session in scenario_sessions
      -
        var scenario = scenario_session.scenario,
          session = scenario_session.session;
      tr
        td= session.state.scenarioTitle
        td= session.state.classroom.company
        td= session.state.classroom.platoon
        td= session.state.classroom.unit
        td= dateFormat( session.document.timestamp )
        td: a.btn.btn-sm.review(href=session.instance||session.document.uri target="_blank") Review
